{# include from admin/entries/create #}
<h3><span class="h3_inner">{{ _('Categories') }}</span></h3>

<div class="checkbox_list">
    <ul id="sys-category-list">
        {{ renderCategoriesTree(categories, entry_categories, true) }}
    </ul>
</div>

<h3><span class="h3_inner">{{ _('Category add') }}</span></h3>
<div class="form_contents">
    <h4><label>{{ _('Parent category') }}</label></h4>
    <select id="sys-category-add-parent">
        <option value="0">{{ _('Not selected') }}</option>
        {% for category in categories %}
            <option value="{{ category.id }}" {% if category.id == 1 %}disabled="disabled"{% endif %}>{{ spaceIndent(category.level) }}{{ category.name }}</option>
        {% endfor %}
    </select>
</div>
<div class="form_contents">
    <h4><label>{{ _('Category name') }}</label></h4>
    <div class="common_input_text"><input type="text" id="sys-category-add-name" placeholder="{{ _('Category name') }}"/></div>
    <div class="btn">
        <button id="sys-category-add" class="btn_contents positive touch" type="button"><i class="positive_add_icon btn_icon"></i>{{ _('Add') }}</button>
    </div>
    <script>
        // カテゴリーのチェックボックスクリック時 強調表示と親階層のチェック処理
        function categoryChange(target) {
            var target = $(target);
            target.prop('checked') ? target.parent().parent().addClass('active') : target.parent().parent().removeClass('active');

            // 以下の処理は親階層のチェック処理を行う
            var parent = target.parent().parent('li');

            // 親全てチェック
            if (target.prop('checked')) {
                while ((parent = parent.parent('ul').parent('li').prev('li')).length) {
                    parent.find('input[type=checkbox]').prop('checked', true).parent().parent().addClass('active');
                }
                return;
            }

            // 同一階層にチェック済みがない場合 １つ上の親のチェックを外す
            while (!parent.siblings().children('input[type=checkbox]:checked').length) {
                parent = parent.parent('ul').parent('li').prev('li');
                if (!parent.length) {
                    return;
                }
                parent.find('input[type=checkbox]').prop('checked', false).parent().parent().removeClass('active');
            }
        }

        $(function () {
            // セレクトボックスにカテゴリを追加
            var addSelect = function (category) {
                if (category.parent_id == 0) {
                    // 末尾に追加
                    $('#sys-category-add-parent').append($('<option>').html(category.name).val(category.id));
                    return;
                }
                // 親の子供の末尾に追加(目印になるものが無いので空白の個数便りに探しだしている)
                var option = $('#sys-category-add-parent > option[value=' + category.parent_id + ']');
                var spaceCount = option.html().split('&nbsp;&nbsp;&nbsp;').length;
                var space = '';
                for (var i = 0; i < spaceCount; i++) {
                    space += '&nbsp;&nbsp;&nbsp;';
                }
                do {
                    if (option.next('option').length == 0) {
                        $('#sys-category-add-parent').append($('<option>').html(space + category.name).val(category.id));
                        break;
                    }
                    option = option.next('option');
                    if (option.html().split(space).length - 1 == 0) {
                        option.prev().after($('<option>').html(space + category.name).val(category.id));
                        break;
                    }
                } while (option.length);
            };

            // カテゴリ一覧にカテゴリを追加
            var addList = function (category) {
                var html = '<li class="active">';
                html += '  <label for="sys-entry-categories-id-' + category.id + '">';
                html += '    <input id="sys-entry-categories-id-' + category.id + '" type="checkbox" name="entry_categories[category_id][]" value="' + category.id + '" checked="checked" onchange="categoryChange(this);" />';
                html += '  ' + category.name + '</label>';
                html += '</li>';
                if (category.parent_id == 0) {
                    $('#sys-category-list').append($(html).hide());
                    $('#sys-entry-categories-id-' + category.id).parent().parent().slideDown('fast');
                } else {
                    var li = $('#sys-entry-categories-id-' + category.parent_id).parent().parent();
                    if (!li.next().children('ul').length) {
                        // 子無しの場合は子を入れるulを追加する
                        li.after('<li><ul></ul></li>');
                    }
                    // 末尾に追加する
                    li.next().children('ul').append($(html).hide());
                    $('#sys-entry-categories-id-' + category.id).parent().parent().slideDown('fast');
                }
            };

            // Enterキーでカテゴリ追加
            $('#sys-category-add-name').keypress(function (e) {
                if ((e.which && e.which === 13) || (e.keyCode && e.keyCode === 13)) {
                    $('#sys-category-add').click();
                }
            });

            // カテゴリ追加処理
            $('#sys-category-add').click(function () {
                var parent_id = $('#sys-category-add-parent').val();
                var name = $('#sys-category-add-name').val();
                if (name == '') {
                    alert('{{ _('Please enter the category name') }}');
                    return;
                }
                if ($('#sys-category-add').prop('disabled')) {
                    return;
                }

                $('#sys-category-add').attr('disabled', 'disabled');
                $('#sys-category-add').val('通信中');

                $.ajax({
                    url: '{{ url(req, 'Categories', 'ajax_add') }}',
                    type: 'POST',
                    data: {category: {parent_id: parent_id, name: name}, sig: "{{ sig }}"},
                    dataType: 'json',
                    success: function (json) {
                        if (json.status != 1) {
                            alert(json.error.name);
                        } else {
                            addSelect(json.category);    // セレクトボックスにカテゴリを追加
                            addList(json.category);      // 一覧にカテゴリを追加
                        }

                        $('#sys-category-add-name').val('');
                        $('#sys-category-add').removeAttr('disabled');
                        $('#sys-category-add').val('{{ _('Add') }}');
                    },
                    error: function (data, status, xhr) {
                        alert("カテゴリ追加時にエラーが発生しました、時間をおいてから再度試行してください。\n" +
                            "An error occurred when adding the category, please wait a while and try again.");
                        $('#sys-category-add-name').val('');
                        $('#sys-category-add').removeAttr('disabled');
                        $('#sys-category-add').val('{{ _('Add') }}');
                    }
                });
                return false;
            });
        });
    </script>
</div>
